package com.thinkgem.jeesite.modules.ats.utils;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.activiti.engine.impl.util.json.JSONArray;
import org.activiti.engine.impl.util.json.JSONObject;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.thinkgem.jeesite.common.utils.DateUtils;
import com.thinkgem.jeesite.common.utils.DownloadUtils;
import com.thinkgem.jeesite.common.utils.FileUtils;
import com.thinkgem.jeesite.common.utils.RegexUtil;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.ats.entity.AtsAct;
import com.thinkgem.jeesite.modules.ats.entity.AtsTask;

public class Florida extends BaseStateUtils{
	
	public Florida(){
		
	}
	
	public Florida(String state) {
		super(state);
	}

	public void doCheckingUpdate(AtsTask task){
		System.out.println(task.getUrl());
		Document dom = null;
		try {
			 dom = Jsoup.connect(task.getUrl()).timeout(10000).get();
		} catch (IOException e) {
			count = -1;
			System.out.println("连接失败");
			return ;
		}
		//进入主页成功，获取Act列表
		Element div = dom.select("div[class=view-content]").first();
		Elements trs = div.select("tr");
		for(Element tr:trs){
			Elements tds = tr.select("td");
			if(tds.size()>0){
				String href = tds.get(0).select("a").first().absUrl("href");
				if(!allActs.contains(href)){
					//发现更新Act
					String chapter = RegexUtil.replace("\\.pdf", "", tds.get(0).text());
					String billNumber = tds.get(3).text();
					if(RegexUtil.isFind("HJR", billNumber)){
						continue;
					}
					System.out.println(billNumber);
					try {
						DownloadUtils.downlaodPdf(href, path, billNumber);
					} catch (IOException e) {

						continue;
					}
					File file = new File(path+File.separator+billNumber+".pdf");
					AtsAct temp = new AtsAct();
					temp.setBillNumber(billNumber);
					temp.setState("Florida");
					temp.setFileSize(file.length()/1024);
					temp.setSessionYear("2016");
					temp.setType(1);
					temp.setDay(DateUtils.getDate("yyyyMMdd"));
					temp.setDownloadFile(file.getAbsolutePath());
					temp.setEffectiveDate("");
					temp.setUrl(href);
					temp.setWorkMode(2);
					temp.setRemark(chapter);
					atsActService.save(temp);
					count++;
				}
			}
		}
	}

	@Override
	public JSONObject doParseAct(AtsAct act) {
		JSONObject root = new JSONObject();
		JSONArray array = new JSONArray();
		String html = "";
		try {
			html = FileUtils.readFileToString(new File(act.getUploadFile()));
		} catch (IOException e) {
			System.err.println("错误类型:文件不存在。错误地址:Florida.java 78行。");
		}
		int pageNumber = RegexUtil.matchAllList("<hr[^>]*?>", html).size()+1;
		html = StringUtils.formatUploadFile(html);
		List<String> list = RegexUtil.matchAllList("<p>Section[\\s\\S]*?(?=<p>Section|$)", html);
		root.put("pageNumber", pageNumber);
		root.put("children", array);
		for(int i=0;i<list.size();i++){
			JSONObject json = new JSONObject();
			String str = list.get(i);
			String first = RegexUtil.match("<p>.*?</p>", str);
			String caption = RegexUtil.match("\\d+\\.\\d+", first);
			String description = "";
			String update = "2";
			if(i == list.size()-1){
				if(RegexUtil.isFind("shall take effect", first)){
					String eff = RegexUtil.match("\\w+ \\d+, \\d+", first);
					eff = DateUtils.changeDateFormat(eff);
					root.put("eff", eff);
					continue;
				}
			}
			if(RegexUtil.isFind("is created to read", first)){
				update = "1";
			}else if(RegexUtil.isFind("is amended to read|is added to subsection|is added to section", first)){
				update = "2";
			}else{
				continue;
			}
			
			str = RegexUtil.replaceFirst("<p>.*?</p>", "", str);
			first = RegexUtil.match("<p>.*?</p>", str);
			description = RegexUtil.replaceFirst(caption, "", first);
			description = RegexUtil.replace("<strike>.*?</strike>", "", description);
			description = RegexUtil.replace("<[^>]*?>", "", description).trim();
			str = RegexUtil.replaceFirst("<p>.*?</p>", "", str);
			json.put("caption", caption);
			json.put("description", description);
			json.put("content", str);
			json.put("update", update);
			array.put(json);
		}
		return root;
	}
}
