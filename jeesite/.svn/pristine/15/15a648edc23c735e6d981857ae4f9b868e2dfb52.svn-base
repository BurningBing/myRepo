/**
 * Copyright &copy; 2012-2014 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.common.utils;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.time.DateFormatUtils;

/**
 * 日期工具类, 继承org.apache.commons.lang.time.DateUtils类
 * @author ThinkGem
 * @version 2014-4-15
 */
public class DateUtils extends org.apache.commons.lang3.time.DateUtils {
	
	public static Map<String,String> monthShortName = new HashMap<String,String>();
	static{
		monthShortName.put("Jan", "01");
		monthShortName.put("Feb", "02");
		monthShortName.put("Mar", "03");
		monthShortName.put("Apr", "04");
		monthShortName.put("May", "05");
		monthShortName.put("Jun", "06");
		monthShortName.put("Jul", "07");
		monthShortName.put("Aug", "08");
		monthShortName.put("Sep", "09");
		monthShortName.put("Oct", "10");
		monthShortName.put("Nov", "11");
		monthShortName.put("Dec", "12");
	}
	
	private static String[] parsePatterns = {
		"yyyy-MM-dd", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm", "yyyy-MM", 
		"yyyy/MM/dd", "yyyy/MM/dd HH:mm:ss", "yyyy/MM/dd HH:mm", "yyyy/MM",
		"yyyy.MM.dd", "yyyy.MM.dd HH:mm:ss", "yyyy.MM.dd HH:mm", "yyyy.MM"};

	/**
	 * 得到当前日期字符串 格式（yyyy-MM-dd）
	 */
	public static String getDate() {
		return getDate("yyyy-MM-dd");
	}
	
	/**
	 * 得到当前日期字符串 格式（yyyy-MM-dd） pattern可以为："yyyy-MM-dd" "HH:mm:ss" "E"
	 */
	public static String getDate(String pattern) {
		return DateFormatUtils.format(new Date(), pattern);
	}
	
	/**
	 * 得到日期字符串 默认格式（yyyy-MM-dd） pattern可以为："yyyy-MM-dd" "HH:mm:ss" "E"
	 */
	public static String formatDate(Date date, Object... pattern) {
		String formatDate = null;
		if (pattern != null && pattern.length > 0) {
			formatDate = DateFormatUtils.format(date, pattern[0].toString());
		} else {
			formatDate = DateFormatUtils.format(date, "yyyy-MM-dd");
		}
		return formatDate;
	}
	
	/**
	 * 得到日期时间字符串，转换格式（yyyy-MM-dd HH:mm:ss）
	 */
	public static String formatDateTime(Date date) {
		return formatDate(date, "yyyy-MM-dd HH:mm:ss");
	}

	/**
	 * 得到当前时间字符串 格式（HH:mm:ss）
	 */
	public static String getTime() {
		return formatDate(new Date(), "HH:mm:ss");
	}

	/**
	 * 得到当前日期和时间字符串 格式（yyyy-MM-dd HH:mm:ss）
	 */
	public static String getDateTime() {
		return formatDate(new Date(), "yyyy-MM-dd HH:mm:ss");
	}

	/**
	 * 得到当前年份字符串 格式（yyyy）
	 */
	public static String getYear() {
		return formatDate(new Date(), "yyyy");
	}

	/**
	 * 得到当前月份字符串 格式（MM）
	 */
	public static String getMonth() {
		return formatDate(new Date(), "MM");
	}

	/**
	 * 得到当天字符串 格式（dd）
	 */
	public static String getDay() {
		return formatDate(new Date(), "dd");
	}

	/**
	 * 得到当前星期字符串 格式（E）星期几
	 */
	public static String getWeek() {
		return formatDate(new Date(), "E");
	}
	
	/**
	 * 日期型字符串转化为日期 格式
	 * { "yyyy-MM-dd", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm", 
	 *   "yyyy/MM/dd", "yyyy/MM/dd HH:mm:ss", "yyyy/MM/dd HH:mm",
	 *   "yyyy.MM.dd", "yyyy.MM.dd HH:mm:ss", "yyyy.MM.dd HH:mm" }
	 */
	public static Date parseDate(Object str) {
		if (str == null){
			return null;
		}
		try {
			return parseDate(str.toString(), parsePatterns);
		} catch (ParseException e) {
			return null;
		}
	}

	/**
	 * 获取过去的天数
	 * @param date
	 * @return
	 */
	public static long pastDays(Date date) {
		long t = new Date().getTime()-date.getTime();
		return t/(24*60*60*1000);
	}

	/**
	 * 获取过去的小时
	 * @param date
	 * @return
	 */
	public static long pastHour(Date date) {
		long t = new Date().getTime()-date.getTime();
		return t/(60*60*1000);
	}
	
	/**
	 * 获取过去的分钟
	 * @param date
	 * @return
	 */
	public static long pastMinutes(Date date) {
		long t = new Date().getTime()-date.getTime();
		return t/(60*1000);
	}
	
	/**
	 * 转换为时间（天,时:分:秒.毫秒）
	 * @param timeMillis
	 * @return
	 */
    public static String formatDateTime(long timeMillis){
		long day = timeMillis/(24*60*60*1000);
		long hour = (timeMillis/(60*60*1000)-day*24);
		long min = ((timeMillis/(60*1000))-day*24*60-hour*60);
		long s = (timeMillis/1000-day*24*60*60-hour*60*60-min*60);
		long sss = (timeMillis-day*24*60*60*1000-hour*60*60*1000-min*60*1000-s*1000);
		return (day>0?day+",":"")+hour+":"+min+":"+s+"."+sss;
    }
	
	/**
	 * 获取两个日期之间的天数
	 * 
	 * @param before
	 * @param after
	 * @return
	 */
	public static double getDistanceOfTwoDate(Date before, Date after) {
		long beforeTime = before.getTime();
		long afterTime = after.getTime();
		return (afterTime - beforeTime) / (1000 * 60 * 60 * 24);
	}
	
	public static String getTodayString() {
		Calendar calendar = Calendar.getInstance();
		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
		Date date = calendar.getTime();
		return format.format(date).toString();
	}
	
	/**
	 * @param args
	 * @throws ParseException
	 */
	public static void main(String[] args) throws ParseException {
//		System.out.println(formatDate(parseDate("2010/3/6")));
//		System.out.println(getDate("yyyy年MM月dd日 E"));
//		long time = new Date().getTime()-parseDate("2012-11-19").getTime();
//		System.out.println(time/(24*60*60*1000));
	}

	/**
	 * @author ZhuXingang
	 * @time 2014-4-17下午04:55:35
	 * @function <p>日期格式转化eg：Apr 1,2014变成 2014/04/01</p>
	 * @param paramDateStr
	 * @return
	 * @return String
	 */
	public static String changeDateFormat(String paramDateStr){
		String monthshort = RegexUtil.match("\\w{3}", paramDateStr);
		String dayshort = RegexUtil.match("(?<=^[^\\d]{0,100})\\d+", paramDateStr);
		if("".equals(dayshort)){
			dayshort = RegexUtil.match("\\d*(?=\\s)", paramDateStr, RegexUtil.CASE_INSENSITIVE);
		}
		//变成首字母大写的
		if(monthshort.equals("")){
			System.out.println();
		}
		monthshort = capitlizeStr(monthshort);
		String year= RegexUtil.match("\\d{4}$", paramDateStr, RegexUtil.CASE_INSENSITIVE);
		String monthNum = getMonthShortName2Num(monthshort);
		if(dayshort.length()==1){
			dayshort = "0"+dayshort;
		}
		if(monthNum==null || "".equals(monthNum)){
			return "";
		}
		if(dayshort==null || "".equals(dayshort)){
			return "";
		}
		if(year==null || "".equals(year)){
			return "";
		}
		String resultDateStr = monthNum+"/"+dayshort+"/"+year;
		return resultDateStr;
	}
	
	public static String getMonthShortName2Num(String monthShortname) {
		return monthShortName.get(monthShortname);
	}
	
	public static String capitlizeStr(String srcStr){
		String tem =  srcStr.substring(0,1).toUpperCase();
		String tem2 = srcStr.substring(1, srcStr.length()).toLowerCase();
		String resultStr = tem+tem2;
		return resultStr ;
	}
	
	public static String formatEffectiveDate(String eff){
		String[] temp = eff.split("/");
		if(temp[0].length()==1){
			temp[0]="0"+temp[0];
		}
		if(temp[1].length()==1){
			temp[1]="0"+temp[1];
		}
		eff = temp[0]+"/"+temp[1]+"/"+temp[2];
		return eff;
		
		
		
	}
}
