/**
 * Copyright &copy; 2012-2014 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.ats.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.ats.entity.AtsFeedback;
import com.thinkgem.jeesite.modules.ats.service.AtsFeedbackService;

/**
 * feedbackController
 * @author Chad
 * @version 2016-04-11
 */
@Controller
@RequestMapping(value = "${adminPath}/ats/atsFeedback")
public class AtsFeedbackController extends BaseController {

	@Autowired
	private AtsFeedbackService atsFeedbackService;
	
	@ModelAttribute
	public AtsFeedback get(@RequestParam(required=false) String id) {
		AtsFeedback entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = atsFeedbackService.get(id);
		}
		if (entity == null){
			entity = new AtsFeedback();
		}
		return entity;
	}
	
	@RequiresPermissions("ats:atsFeedback:view")
	@RequestMapping(value = {"list", ""})
	public String list(AtsFeedback atsFeedback, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<AtsFeedback> page = atsFeedbackService.findPage(new Page<AtsFeedback>(request, response), atsFeedback); 
		model.addAttribute("page", page);
		return "modules/ats/atsFeedbackList";
	}

	@RequiresPermissions("ats:atsFeedback:view")
	@RequestMapping(value = "form")
	public String form(AtsFeedback atsFeedback, Model model) {
		model.addAttribute("atsFeedback", atsFeedback);
		return "modules/ats/atsFeedbackForm";
	}

	@RequiresPermissions("ats:atsFeedback:edit")
	@RequestMapping(value = "save")
	public String save(AtsFeedback atsFeedback, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, atsFeedback)){
			return form(atsFeedback, model);
		}
		atsFeedbackService.save(atsFeedback);
		addMessage(redirectAttributes, "保存feedback成功");
		return "redirect:"+Global.getAdminPath()+"/ats/atsFeedback/?repage";
	}
	
	@RequiresPermissions("ats:atsFeedback:edit")
	@RequestMapping(value = "delete")
	public String delete(AtsFeedback atsFeedback, RedirectAttributes redirectAttributes) {
		atsFeedbackService.delete(atsFeedback);
		addMessage(redirectAttributes, "删除feedback成功");
		return "redirect:"+Global.getAdminPath()+"/ats/atsFeedback/?repage";
	}

}